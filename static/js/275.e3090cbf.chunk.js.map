{"version":3,"file":"static/js/275.e3090cbf.chunk.js","mappings":"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","sources":["components/Container/Container.jsx","components/Error/Error.jsx","components/Loader/Loader.jsx","components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.jsx","components/Notification/Notification.jsx","constants/Status.js","components/Searchbar/Searchbar.jsx","pages/Movies.jsx","service/api.js"],"sourcesContent":["\n\nfunction Container({ children }) {\n    return (\n        <div>{children}</div>\n    )\n}\n\nexport default Container; ","import { PiMaskSadDuotone } from \"react-icons/pi\";\n\n\nfunction Error({ children }) {\n    return (\n        <div>\n            <PiMaskSadDuotone />\n            {children}\n        </div>\n    )\n}\n\nexport default Error;","import {ThreeDots } from 'react-loader-spinner';\n\nfunction Loader() {\n    return (\n        <div>\n            <ThreeDots color='#c24d2c'/> \n            <p>Soon...</p>\n        </div>\n      \n        \n    )\n}\n\nexport default Loader;","import { NavLink, useLocation } from \"react-router-dom\";\nimport { IoIosArrowForward } from \"react-icons/io\";\n\n\n\n\nfunction MoviesListItem ({ title, id }) {\n    const location = useLocation();\n    return (\n        <li>\n            <IoIosArrowForward />\n            <NavLink to={`/movies/${id}`} state={{ from: location }}>{title}</NavLink> \n        </li>\n    )\n}\n\nexport default MoviesListItem; ","import MoviesListItem from \"../MoviesListItem/MoviesListItem\";\n\n\n\nfunction MoviesList({movies}) {\n    return (\n        <div>       \n            <ul>\n                {movies.map(({id, title}) => <MoviesListItem\n                    key={id}\n                    title={title}\n                    id={id}\n                />)}\n            </ul>\n        </div>\n    )\n}\n\nexport default MoviesList; ","import { PiMaskSadDuotone } from \"react-icons/pi\";\n\n\nfunction Notification({ children }) {\n    return (\n        <div>\n            <PiMaskSadDuotone />\n            {children}\n        </div>\n    )\n}\n\nexport default  Notification;","export const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n}\n\nexport default STATUS;","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { BiSearchAlt } from \"react-icons/bi\";\n\nimport Container from 'components/Container/Container';\n\n\n\nfunction Searchbar({ submit }) {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query') ?? '';\n    const [searchQuery, setSearchQuery] = useState(query);\n    \n    const onFormSubmit =  (event) => {\n        event.preventDefault();\n        setSearchParams({ query: searchQuery});\n        submit(searchQuery);    \n      \n    }\n\n    const onInputChange = (event)=> {\n        const normaliseQuery = event.currentTarget.value.toLocaleLowerCase().trim();\n        setSearchQuery(normaliseQuery);\n    }\n\n    return (\n        <div>\n            <Container>\n                <form onSubmit={onFormSubmit}>\n                    <input type=\"text\"\n                        onChange={onInputChange}\n                        value={searchQuery}\n                        placeholder=\"Search movies\"/>\n                    <button type=\"submit\">\n                        <BiSearchAlt />\n                    </button>        \n                </form>\n            </Container>        \n        </div>\n             \n    )\n}\n\nexport default Searchbar;","import Searchbar from \"../components/Searchbar/Searchbar\";\nimport { getMoviesByKeyword } from \"../service/api\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport Error from \"../components/Error/Error\";\nimport STATUS from \"../constants/Status\";\nimport MoviesList from \"../components/MoviesList/MoviesList\";\nimport Loader from \"../components/Loader/Loader\";\nimport Notification from \"../components/Notification/Notification\";\n\n\nfunction Movies() {\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query') ?? '';\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState('');\n    const [status, setStatus] = useState(STATUS.IDLE);\n    \n    useEffect(() => {\n        if (query === '') {\n            return;\n        }\n        setStatus(STATUS.PENDING);\n        getMoviesByKeyword(query).then(data => {               \n            setMovies(data.results);\n            setStatus(STATUS.RESOLVED);            \n        }).catch(error => { \n            setError('Oops! Something went wrong. Try again.');\n            setStatus(STATUS.REJECTED); \n        })}, [query]);\n\n    const getQuery = (value) => {\n        setSearchParams({ query: value });\n    }\n\n    return (\n        <>\n        <Searchbar submit={getQuery} />\n            {status === STATUS.RESOLVED &&\n                (movies.length ?\n                    (<MoviesList movies={movies} />) :\n                    (<Notification>No items found! Enter other serch therm.</Notification>)\n                )\n            }\n            {status === STATUS.REJECTED && <Error>{error}</Error>} \n            {status === STATUS.PENDING && <Loader/>} \n        </>   \n    )    \n}\n\nexport default Movies; ","const API_KEY ='76adc9c81926b23ecb40fbae47c771a2'\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport function getTrendingMovies() {\n    return  fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.json())\n}\n\nexport function getDetails(id) {\n    return fetch(`${BASE_URL}/movie/${id}?language=en-US&api_key=${API_KEY}`)\n    .then(response => response.json())\n}\n\nexport function getCast(id) {\n    return fetch(`${BASE_URL}/movie/${id}/credits?language=en-US&api_key=${API_KEY}`)\n    .then(response => response.json())\n}\n\nexport function getReviews(id) {\n    return fetch(`${BASE_URL}/movie/${id}/reviews?language=en-US&api_key=${API_KEY}`)\n    .then(response => response.json())\n}\n\nexport function getMoviesByKeyword(searchQuery) {\n    return fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}`)\n        .then(response => response.json())\n  \n}"],"names":["_ref","children","_jsx","_jsxs","PiMaskSadDuotone","ThreeDots","color","title","id","location","useLocation","IoIosArrowForward","NavLink","to","concat","state","from","movies","map","_ref2","MoviesListItem","IDLE","PENDING","RESOLVED","REJECTED","_searchParams$get","submit","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","query","get","_useState","useState","_useState2","searchQuery","setSearchQuery","Container","onSubmit","event","preventDefault","type","onChange","normaliseQuery","currentTarget","value","toLocaleLowerCase","trim","placeholder","BiSearchAlt","setMovies","_useState3","_useState4","error","setError","_useState5","STATUS","_useState6","status","setStatus","useEffect","getMoviesByKeyword","then","data","results","catch","_Fragment","Searchbar","length","MoviesList","Notification","Error","Loader","API_KEY","BASE_URL","getTrendingMovies","fetch","response","json","getDetails","getCast","getReviews"],"sourceRoot":""}